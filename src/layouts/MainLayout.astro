---
// src/layouts/MainLayout.astro - Updated with better responsive handling
import { ViewTransitions } from 'astro:transitions';
import Sidebar from '../components/Sidebar.astro';
import Topbar from '../components/Topbar.astro';
import '../styles/global.css';

// This layout adds improved responsiveness
---

<html lang="pl">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content="MaTails - Kolekcja komponentÃ³w UI zbudowanych przy uÅ¼yciu Astro i Tailwind CSS" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

		<!-- Prism CSS for syntax highlighting (Dracula Theme) -->
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css"
			integrity="sha512-vswe+cgvic/XBoF1OcM/TeJ2FW0OofqAVdCZiEYkd6dwGXthvkSFWOoGGJgS2CW70VK5dQM5Oh+7ne47s74VTg=="
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		/>

		<!-- Additional CSS for Dracula theme -->
		<style is:global>
			/**
			 * Dracula Theme for Prism.js
			 */
			pre[class*='language-'],
			code[class*='language-'] {
				color: #f8f8f2;
				background: none;
				font-family: 'JetBrains Mono', 'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
				text-align: left;
				white-space: pre;
				word-spacing: normal;
				word-break: normal;
				word-wrap: normal;
				line-height: 1.5;
				tab-size: 4;
				hyphens: none;
			}

			pre[class*='language-']::selection,
			code[class*='language-']::selection,
			pre[class*='language-'] ::selection,
			code[class*='language-'] ::selection {
				text-shadow: none;
				background-color: #44475a;
			}

			@media print {
				pre[class*='language-'],
				code[class*='language-'] {
					text-shadow: none;
				}
			}

			.dracula-code,
			pre[class*='language-'] {
				background: #282a36;
				border-radius: 0.5em;
				padding: 1em;
				margin: 0.5em 0;
				overflow: auto;
			}

			:not(pre) > code[class*='language-'] {
				padding: 0.1em 0.3em;
				border-radius: 0.3em;
				white-space: normal;
			}

			.token.comment,
			.token.prolog,
			.token.doctype,
			.token.cdata {
				color: #6272a4;
			}

			.token.punctuation {
				color: #f8f8f2;
			}

			.namespace {
				opacity: 0.7;
			}

			.token.property,
			.token.tag,
			.token.constant,
			.token.symbol,
			.token.deleted {
				color: #ff79c6;
			}

			.token.boolean,
			.token.number {
				color: #bd93f9;
			}

			.token.selector,
			.token.attr-name,
			.token.string,
			.token.char,
			.token.builtin,
			.token.inserted {
				color: #50fa7b;
			}

			.token.operator,
			.token.entity,
			.token.url,
			.language-css .token.string,
			.style .token.string,
			.token.variable {
				color: #f8f8f2;
			}

			.token.atrule,
			.token.attr-value,
			.token.function,
			.token.class-name {
				color: #f1fa8c;
			}

			.token.keyword {
				color: #8be9fd;
			}

			.token.regex,
			.token.important {
				color: #ffb86c;
			}

			.token.important,
			.token.bold {
				font-weight: bold;
			}

			.token.italic {
				font-style: italic;
			}

			.token.entity {
				cursor: help;
			}

			/* Improved responsive styles for sidebar */
			@media (max-width: 1023px) {
				#sidebar {
					width: 80%;
					max-width: 300px;
					transform: translateX(-100%);
					transition: transform 0.3s ease-in-out;
					z-index: 50;
				}
				
				body.sidebar-open #sidebar {
					transform: translateX(0);
				}
				
				body.sidebar-open #sidebar-overlay {
					display: block !important;
				}
			}

			@media (min-width: 1024px) {
				#sidebar {
					transform: none !important;
				}
				
				#main-content {
					width: calc(100% - 16rem);
					margin-left: 16rem;
				}
			}
			
			/* Custom breakpoint for extra small devices */
			@media (max-width: 475px) {
				.preview {
					padding: 0.75rem !important;
				}
				
				.copy-btn {
					padding: 0.375rem 0.75rem !important;
					font-size: 0.75rem !important;
				}
				
				h1.text-3xl, h1.text-4xl {
					font-size: 1.5rem !important;
				}
				
				.p-6 {
					padding: 1rem !important;
				}
			}
		</style>

		<!-- JavaScript for project -->
		<script src="/scripts/clipboard.js" defer></script>
		<script src="/scripts/view-transition.js" defer></script>
		<script src="/scripts/prism-initializer.js" defer></script>
		<script src="/scripts/sidebar.js" defer></script>

		<!-- Prism JavaScript for syntax highlighting -->
		<script
			is:inline
			src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"
			integrity="sha512-9khQRAUBYEJDCDVP2yw3LRUQvjJ0Pjx0EShmaQjcHa6AXiOv6qHQu9lCAIR8O+/D8FtaCoJ2c0Tf9Xo7hYH01Q=="
			crossorigin="anonymous"
			referrerpolicy="no-referrer"></script>
		<script
			is:inline
			src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"
			integrity="sha512-SkmBfuA2hqjzEVpmnMt/LINrjop3GKWqsuLSSB3e7iBmYK7JuWw4ldmmxwD9mdm2IRTTi0OxSAfEGvgEi0i2Kw=="
			crossorigin="anonymous"
			referrerpolicy="no-referrer"></script>

		<title>MaTails - Komponenty UI z Astro i Tailwind CSS</title>
		<ViewTransitions />
	</head>
	<body class="bg-gray-50 text-gray-900">
		<Topbar />
		<Sidebar />

		<!-- Main content -->
		<main class="pt-16 transition-all duration-300" id="main-content">
			<div class="p-4 sm:p-6 md:p-8 max-w-7xl mx-auto">
				<!-- Page header -->
				<div class="mb-6 md:mb-8">
					<h1 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-2">
						<slot name="page-title">MaTails - Komponenty UI</slot>
					</h1>
					<p class="text-gray-600 text-sm sm:text-base">
						<slot name="page-description">Kolekcja gotowych komponentÃ³w zbudowanych z Astro i Tailwind CSS.</slot>
					</p>
				</div>

				<!-- Main content -->
				<div class="view-container bg-white p-4 sm:p-6 rounded-lg border border-gray-200 shadow-sm">
					<slot />
				</div>

				<!-- Footer -->
				<footer class="mt-6 md:mt-8 text-center text-sm text-gray-500 pb-4 md:pb-8">
					<div class="mb-2">
						<span>MaTails &copy; 2025</span>
						<span class="mx-2">|</span>
						<a href="https://github.com/MatPawluk/MaTail" class="text-blue-600 hover:underline">GitHub</a>
					</div>
					<div>
						<p>
							Zbudowane z ðŸ’™ przy uÅ¼yciu <a href="https://astro.build" class="text-blue-600 hover:underline">Astro</a> i
							<a href="https://tailwindcss.com" class="text-blue-600 hover:underline">Tailwind CSS</a>.
						</p>
					</div>
				</footer>
			</div>
		</main>

		<script>
			// Improved script for responsive layout
			document.addEventListener('DOMContentLoaded', function () {
				const sidebar = document.getElementById('sidebar');
				const mainContent = document.getElementById('main-content');
				const sidebarOverlay = document.getElementById('sidebar-overlay');

				// Function to adjust layout based on screen size
				function adjustLayout() {
					if (window.innerWidth >= 1024) {
						// On desktop screens
						if (mainContent) {
							mainContent.classList.add('lg:ml-64');
							mainContent.style.width = 'calc(100% - 16rem)';
						}
						
						if (sidebar) {
							sidebar.classList.remove('-translate-x-full');
							sidebar.style.transform = '';
						}
						
						if (sidebarOverlay) {
							sidebarOverlay.classList.add('hidden');
						}
						
						document.body.classList.remove('sidebar-open');
						document.body.style.overflow = '';
					} else {
						// On smaller screens
						if (mainContent) {
							mainContent.classList.remove('lg:ml-64');
							mainContent.style.width = '100%';
						}
						
						// Hide sidebar unless explicitly opened
						if (sidebar && !document.body.classList.contains('sidebar-open')) {
							sidebar.classList.add('-translate-x-full');
						}
					}
				}

				// Run on page load
				adjustLayout();
				
				// Listen for window resize
				window.addEventListener('resize', adjustLayout);
				
				// After View Transitions
				document.addEventListener('astro:after-swap', function() {
					// Re-query elements since DOM has been updated
					const updatedSidebar = document.getElementById('sidebar');
					const updatedMainContent = document.getElementById('main-content');
					const updatedOverlay = document.getElementById('sidebar-overlay');
					
					// Reapply layout adjustments
					if (window.innerWidth >= 1024) {
						if (updatedMainContent) {
							updatedMainContent.classList.add('lg:ml-64');
							updatedMainContent.style.width = 'calc(100% - 16rem)';
						}
						
						if (updatedSidebar) {
							updatedSidebar.classList.remove('-translate-x-full');
							updatedSidebar.style.transform = '';
						}
						
						if (updatedOverlay) {
							updatedOverlay.classList.add('hidden');
						}
						
						document.body.classList.remove('sidebar-open');
						document.body.style.overflow = '';
					} else {
						if (updatedMainContent) {
							updatedMainContent.classList.remove('lg:ml-64');
							updatedMainContent.style.width = '100%';
						}
						
						if (updatedSidebar && !document.body.classList.contains('sidebar-open')) {
							updatedSidebar.classList.add('-translate-x-full');
						}
					}
					
					// Fix sidebar visibility
					if (updatedSidebar) {
						const allElements = updatedSidebar.querySelectorAll('*');
						allElements.forEach(el => {
							if (el instanceof HTMLElement) {
								if (el.tagName === 'A') {
									el.style.display = 'flex';
								} else if (el.tagName === 'SPAN' && el.classList.contains('flex-1')) {
									el.style.display = 'block';
								} else if (el.tagName === 'SVG') {
									el.style.display = 'inline-block';
								}
								el.style.visibility = 'visible';
							}
						});
					}
				});
			});
		</script>
	</body>
</html>